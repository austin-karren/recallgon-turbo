import type { NextPage } from "next";
import Head from "next/head";
import { SignInButton, useUser } from "@clerk/nextjs";

import { api, type RouterOutputs } from "~/utils/api";
import Image from "next/image";

const PostWizard: React.FC = () => {
  const { user } = useUser();

  console.log("userId", user?.id);

  if (!user) {
    return null;
  }

  return (
    <div className="flex gap-3 w-full">
      <Image
        src={user?.profileImageUrl || "/user-circle.png"}
        alt="Profile image"
        className="rounded-full"
        width={48}
        height={48}
      />
      <input
        placeholder="Type your favorite emojis 🐱"
        className="bg-transparent grow outline-none text-lg"
      />
    </div>
  );
};

type PostWithUser = RouterOutputs["post"]["getAll"][number];

const PostView = ({ post, author }: PostWithUser) => {
  return (
    <div key={post.id} className="p-8 border-b border-gray-500">
      {post.content} @{author?.username}
    </div>
  );
};

const Home: NextPage = () => {
  const user = useUser();

  const postQuery = api.post.getAll.useQuery();

  if (postQuery.isLoading) {
    return (
      <div className="flex justify-center items-center h-screen">
        Loading...
      </div>
    );
  }

  if (!postQuery.data) {
    return (
      <div className="flex justify-center items-center h-screen">
        Something went wrong.
      </div>
    );
  }

  return (
    <>
      <Head>
        <title>Eventr</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="flex justify-center h-screen">
        <div className="container w-full border-gray-500 md:border-x md:max-w-2xl">
          <div className="border-b border-gray-500 p-4 flex">
            {!user.isSignedIn && (
              <div className="flex justify-center">
                <SignInButton />
              </div>
            )}
            {!!user.isSignedIn && (
              <div className="flex justify-center grow">
                <PostWizard />
              </div>
            )}
          </div>
          <div className="flex flex-col">
            {postQuery.data?.map((fullPost) => (
              <PostView {...fullPost} key={fullPost?.post.id} />
            ))}
          </div>
          {/* <CreatePostForm /> */}
        </div>
      </main>
    </>
  );
};

export default Home;
